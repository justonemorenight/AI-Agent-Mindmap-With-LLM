name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: './client/pnpm-lock.yaml'

      - name: Setup environment
        run: |
          cd client
          cp env.example .env.local

      - name: Install dependencies
        working-directory: ./client
        run: pnpm install --frozen-lockfile

      - name: Lint
        working-directory: ./client
        run: pnpm lint

      - name: Build
        working-directory: ./client
        run: pnpm build
        env:
          NEXT_PUBLIC_GEMINI_API_KEY: ${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }}

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: |
            ./client/.next
            ./client/node_modules
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ai-mindmap:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ai-mindmap:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ai-mindmap:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ai-mindmap:buildcache,mode=max
